//============================================================================
// Name        : tinyvm.cpp
// Author      : GIanfranco Murador
// Version     :
// Copyright   : GPL
// Description : Simple and tiny VM, with LLVM spec
// Dependency - LLVM and boost spirit
// Al momento la compilazione viene fatta su ambiente Linux 64 bit
// il porting su windows dovr√† contemplare l'uso di LLVM e boost lib per
// windows
//============================================================================

#include <iostream>
#include "Logger.h"
#include <stdexcept>
#include "version.h"
#include "CommandLine.h"
#include <boost/smart_ptr/shared_ptr.hpp>
#include <boost/date_time/posix_time/posix_time.hpp>

#include <boost/log/common.hpp>
#include <boost/log/expressions.hpp>
#include <boost/log/attributes.hpp>
#include <boost/log/sources/logger.hpp>
#include <boost/log/sinks/sync_frontend.hpp>
#include <boost/log/sinks/text_file_backend.hpp>
using namespace std;
using namespace inout;

namespace logging = boost::log;
namespace attrs = boost::log::attributes;
namespace src = boost::log::sources;
namespace sinks = boost::log::sinks;
namespace expr = boost::log::expressions;
namespace keywords = boost::log::keywords;
using boost::shared_ptr;


int banner() {
	cout << "Giano VM - v" << GIANO_MAX_VERSION << "." << GIANO_MIN_VERSION
			<< " (C) 2014 GWS" << endl;
	return 1;
}

int main(int argc, char * argv[]) {
	banner();
	try {
		init_logger();
		src::logger lg;
		CommandLine * commandLine = new CommandLine();
     	CL *cl = commandLine->parse(argc, argv);
     	if (!cl->ok) {
			commandLine->print_usage();
	 	}

	} catch (std::exception& e) {
		std::cout << "FAILURE: " << e.what() << std::endl;
		return 1;
	}
	return 0;
}
